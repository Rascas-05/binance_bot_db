8 - Creating our first Django model - Python Trading Bot Full Tutorial (Python, Django, Binance) - Thomas DB - Sep 11 2022
https://www.youtube.com/watch?v=amyVv_WEi5w

# Create another app called "klines"
---Terminal---
ps> python manage.py startapp klines
# Note new folder "klines" and sub folders have been created. 

# In klines\models.py we are going to define the "kline" class to create the table and column fields to store kline data retrieved from Binance.
----klines\models.py----
#Template for table -> column names
def prettify_binance_response(kline):
    return {
        "open_time": datetime.fromtimestamp(datetime.timezone.utc)(int(str(kline[0])[:10])).strftime("%Y-%m-%d %H:%M:%S"),
        "open": kline[1],
        "high": kline[2],
        "low": kline[3],
        "close": kline[4],
        "volume": kline[5],
        "close_time": datetime.fromtimestamp(datetime.timezone.utc)(int(str(kline[6])[:10])).strftime("%Y-%m-%d %H:%M:%S"),
        "quote asset volume": kline[7],
        "number of trades": kline[8],
        "Taker buy base asset volume": kline[9],
        "Taker buy quote asset volume": kline[10]
    }
------------		
class klines(models.Model):
	code - models.charfield(max_length=8, default="BTCUSDT")
	open_time = models.DateTimeField()
	close_time = models.DateTimeField()
	open = models.DecimalField(decimal_places=8, max_digits=24)
	high = models.DecimalField(decimal_places=8, max_digits=24)
	low = models.DecimalField(decimal_places=8, max_digits=24)
	close = models.DecimalField(decimal_places=8, max_digits=24)
	volume = models.IntegerField()
        quote_volume = models.IntegerField()
        number_trades= models.IntegerField()
        Taker_buy_base_volume= models.IntegerField()
        Taker_buy_quote_volume= models.IntegerField()

---Terminal---
ps> python manage.py makemigrations
No changes detected
---settings.py---
Add trades & klines to 'INSTALLED_APPS'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'trades',
    'klines',
]
----Terminal---
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations
Migrations for 'klines':
  klines\migrations\0001_initial.py
    + Create model Klines
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
--------------
Trades table doesn't exist in db.sqlite
Klines table is missing columns: 
	volume = models.IntegerField()
        quote_volume = models.IntegerField()
        number_trades= models.IntegerField()
        Taker_buy_base_volume= models.IntegerField()
        Taker_buy_quote_volume= models.IntegerField()
--------------
# Rolling back app migrations -> python manage.py migrate <app> zero
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate klines zero 
Operations to perform:
  Unapply all migrations: klines
Running migrations:
  No migrations to apply.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate trades zero
Operations to perform:
  Unapply all migrations: trades
Running migrations:
  No migrations to apply.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate trades zero
----
Check db.sqlite tables
found table "klines_klines"
and column "pair" instead of "code_pair"
and missing the last 5 columns as listed in Klines models.py


---Terminal----
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations --check
No changes detected
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
---VSCode Explorer---
----file binance_bot_db\klines\migrations\0001_initial.py---
# Generated by Django 5.1.3 on 2024-11-25 00:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Klines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='BTCUSDT', max_length=8)),
                ('open_time', models.DateTimeField()),
                ('close_time', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=8, max_digits=24)),
                ('high', models.DecimalField(decimal_places=8, max_digits=24)),
                ('low', models.DecimalField(decimal_places=8, max_digits=24)),
                ('close', models.DecimalField(decimal_places=8, max_digits=24)),
                ('volume', models.IntegerField()),
                ('quote_volume', models.IntegerField()),
                ('number_trades', models.IntegerField()),
                ('Taker_buy_base_volume', models.IntegerField()),
                ('Taker_buy_quote_volume', models.IntegerField()),
            ],
        ),
    ]
---------------
This explains why the klines table won't get updated as per the Klines class model.
I will try deleting the existing "klines-klines" table and this file, Close and reopen VSCode. 
Then, rerun the migrations for klines app.
Close DB Browser for SQLite after deleting table "klines_klines":
---Terminal---
#python manage.py makemigrations.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations                           
Migrations for 'klines':
  klines\migrations\0001_initial.py
    + Create model Klines
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
-----------
# Table "klines" not created in db.sqlite
-----------
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, klines, sessions
Running migrations:
  Applying klines.0001_initial... OK
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
-------
refer tp -> 8 - chatGPT4 Query re db.sqlite table name klines_klines
------
---klines\models.py---
from django.db import models

# Create your models here.
class Klines(models.Model):
	code = models.CharField(max_length=8, default="BTCUSDT")
	open_time = models.DateTimeField()
	close_time = models.DateTimeField()
	open = models.DecimalField(decimal_places=8, max_digits=24)
	high = models.DecimalField(decimal_places=8, max_digits=24)
	low = models.DecimalField(decimal_places=8, max_digits=24)
	close = models.DecimalField(decimal_places=8, max_digits=24)
	volume = models.IntegerField()
	quote_volume = models.IntegerField()
	number_trades = models.IntegerField()
Taker_buy_base_volume = models.IntegerField()
Taker_buy_quote_volume = models.IntegerField()

class Meta:
	db_table = 'klines'  # Explicitly set the table name
---Terminal---
PS > python manage.py makemigrations
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations
It is impossible to add a non-nullable field 'Taker_buy_base_volume' to klines without specifying a default. This is because the database needs something to populate existing rows.
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit and manually define a default value in models.py.
Select an option: 2
---Models.py---
from django.db import models

# Create your models here.
class Klines(models.Model):
	code = models.CharField(max_length=8, default="BTCUSDT")
	open_time = models.DateTimeField()
	close_time = models.DateTimeField()
	open = models.DecimalField(decimal_places=8, max_digits=24)
	high = models.DecimalField(decimal_places=8, max_digits=24)
	low = models.DecimalField(decimal_places=8, max_digits=24)
	close = models.DecimalField(decimal_places=8, max_digits=24)
	volume = models.IntegerField(default = 0)
	quote_volume = models.IntegerField(default = 0)
	number_trades = models.IntegerField(default = 0)
	Taker_buy_base_volume = models.IntegerField(default = 0)
	Taker_buy_quote_volume = models.IntegerField(default = 0)

class Meta:
	db_table = 'klines'  # Explicitly set the table name
----Terminal----
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations
Migrations for 'klines':
  klines\migrations\0003_klines_taker_buy_base_volume_and_more.py
    + Add field Taker_buy_base_volume to klines
    + Add field Taker_buy_quote_volume to klines
    ~ Alter field number_trades on klines
    ~ Alter field quote_volume on klines
    ~ Alter field volume on klines
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db>
----Terminal----
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, klines, sessions
Running migrations:
  Applying klines.0002_remove_klines_taker_buy_base_volume_and_more... OK
  Applying klines.0003_klines_taker_buy_base_volume_and_more... OK
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db>  
-------------
Table name still not fixed. Redo flush migrations and delete table.
Delete table klines_klines
Delete klines\migrations\delete all files excpt __init__.py
---Terminal---
PS> python manage.py makemigrations
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations
Migrations for 'klines':
  klines\migrations\0001_initial.py
    + Create model Klines
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, klines, sessions
Running migrations:
  No migrations to apply.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
------------
#Note re Django user created app folders, models.py and app migrations.
Maybe it's better to accept the default table names generated by Django migration tool than to modify them and possibly generate issues with table migrations.
====================================
Django Best Practices - Projects vs Apps - Learn Django.con July 18 2024 
https://learndjango.com/tutorials/django-best-practices-projects-vs-apps#:~:text=3rd%20Party%20Package.-,App%20Naming%20Conventions,a%20main%20model%20called%20Post%20.
====================================
How to Read the Database Table Name of a Model Instance in Python Django - Geeks for Geeks 03 Oct 2024
https://www.geeksforgeeks.org/how-to-read-the-database-table-name-of-a-model-instance-in-python-django
====================================
So I decided to go with default table names and comment out the following lines.  
----klines/models.py----
# class Meta:
# 	db_table = 'klines'  # Explicitly set the table name
----Terminal----
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py makemigrations 
Migrations for 'klines':
  klines\migrations\0001_initial.py
    + Create model Klines
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate        
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, klines, sessions
Running migrations:
  No migrations to apply.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
-----------
Table "klines_klines" wasn't created so I removed the following from the models.py:
	close = models.DecimalField(decimal_places=8, max_digits=24)
	volume = models.IntegerField(default = 0)
	quote_volume = models.IntegerField(default = 0)
	number_trades = models.IntegerField(default = 0)
	Taker_buy_base_volume = models.IntegerField(default = 0)
	Taker_buy_quote_volume = models.IntegerField(default = 0)
-------------------------------------
Rerun the migrations.No change. 
save copy of klines models.py
----Klines\Models.py-----
from django.db import models

class Klines(models.Model):
    code = models.CharField(max_length=8, default="BTCUSDT")
    open_time = models.DateTimeField()
    close_time = models.DateTimeField()
    open = models.DecimalField(decimal_places=8, max_digits=24)
    high = models.DecimalField(decimal_places=8, max_digits=24)
    low = models.DecimalField(decimal_places=8, max_digits=24)
    close = models.DecimalField(decimal_places=8, max_digits=24)
    volume = models.IntegerField()
    quote_volume = models.IntegerField()
    number_trades = models.IntegerField()
    taker_buy_base_volume = models.IntegerField()
    taker_buy_quote_volume = models.IntegerField()

    class Meta:
        db_table = 'klines'  # Explicitly set the table name
---------------
So remove Klines app and redo
How to Completely Uninstall a Django App Geeks for Geeks - 15 August 2024
https://www.geeksforgeeks.org/how-to-completely-uninstall-a-django-app/


1. Open your settings.py file.
Locate the INSTALLED_APPS list.
Remove the app entry from the list.
# Application definition
---Extract settings.py----
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

2. Delete Migration Files (Optional):
Navigate to the app’s migrations folder, typically found at my_app/migrations/.
Delete all files in this folder except __init__.py.
Done

3. Remove Database Tables
If the app created any database tables, we might need to manually delete them if the app’s removal doesn’t automatically handle it. This can usually be done using Django’s migration system or directly via SQL commands.

For example, we might use Django’s migrate command to remove tables:

python manage.py migrate --fake my_app zero 
---terminal---
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> python manage.py migrate --fake my_app zero 
CommandError: No installed app with label 'my_app'.
PS C:\Users\bfvdi\Documents\AppDevelopment\VSCODE\Projects\Django\Thomas-DB\binance_bot_db> 
--------------

4. Remove URL Patterns
If your app has URL patterns included in your project’s URL configuration, we need to remove them.

Open your project’s urls.py file.
Find and remove the URL patterns related to the app.
No URL's have been created. done.

5. Delete the App’s Directory
Remove the entire directory of my_app: Done.

6. Remove App-Specific References
If there are any import statements or usage of my_app in our project files, we need to remove or update them:


1 # Example of code referencing my_app that needs to be removed
2 from my_app.models import MyModel 
3​
4 def some_function():
5 instance = MyModel.objects.all()

No code references to the Klines app. Done.
-----------------------
Reopen VSCode.

VSCode Editor complaining about missing files. Closed files.
===============================
A fresh start? Lets see.
------refer to ->
8 - Rebuild klines app - Creating our first Django model - Python Trading Bot Full Tutorial (Python, Django, Binance) - Thomas DB - Sep 11 2022
-----------------
---admin.py---
from django.contrib import admin
from .models import Klines

class KlineAdmin(admin.ModelAdmin):
	pass

admin.site.register(Klines, KlineAdmin)

----Terminal---
PS> python manage.py runserver
----Chrome Browser---
http://127.0.0.1:8000/admin
Login (as admin)
=======================
New section appears on Django Administration page:
KLINES
Kliness  +Add
=======================
Add a Kline:
btcusd 93,217.21
Able to save kline sample data.
Open DB Browser and view table data -> klines_klines
Able to view the saved kline sample data.
=========================
End of video #8


